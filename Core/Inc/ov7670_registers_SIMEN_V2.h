/*
 * ov7670_registers_SIMEN_V2.h
 * config1
 *
 *  Created on: Jun 14, 2021
 *      Author: Simen
 */

#ifndef INC_OV7670_REGISTERS_SIMEN_V2_H_
#define INC_OV7670_REGISTERS_SIMEN_V2_H_

#define REG_BATT 0xFF

static const uint8_t OV7670_reg[][2] = {
  /* Color mode related */
  {0x12, 0x14},   // QVGA, RGB
  {0x8C, 0x00},   // RGB444 Disable
  {0x40, 0x10 + 0xc0},   // RGB565, 00 - FF - fullscale is 0xD0 (0x10+0xc0) - MIT use 0x10
  //{0x40, 0x90}, //limits range to 01-FE
  //{0x3A, 0x04 + 8},   // UYVY (why?) - Not my comment
 // {0x3A, 0x0c}, //Same as 0x04+8 - 11: V Y U Y - greenish
  /*From Application Note - Simen*/
   //{0x3a, 0x04},
//   {0x3A, 0x14},
//   {0x67, 0xc8}, //fixed UV values instead of chip output
//   {0x68, 0x80}, //fixed UV values instead of chip output


  //{0x3A, 0x2c}, //this gives a black image - not inverted?
  //{0x3A, 0x08},   //10: U Y V Y - greenish
  //{0x3A, 0x04},   //01: Y V Y U - inverted
  //{0x3A, 0x00}, //00: Y U Y V - don't work
  //{0x3A, 0x1c},
   //{0x3A, 0x14},
  {0x3D, 0x80 + 0x00},   // gamma enable, UV auto adjust, UYVY
  {0xB0, 0x84}, // important



  /* clock related */
  {0x0C, 0x04},  // DCW enable
  {0x3E, 0x19},  // manual scaling, pclk/=2
  {0x70, 0x3A},  // scaling_xsc
  {0x71, 0x35},  // scaling_ysc
  {0x72, 0x11}, // down sample by 2
  {0x73, 0xf1}, // DSP clock /= 2

  /* windowing (empirically decided...) */
  {0x17, 0x16},   // HSTART
  {0x18, 0x04},   // HSTOP
  {0x32, 0x80},   // HREF
  {0x19, 0x03},   // VSTART =  14 ( = 3 * 4 + 2)
  {0x1a, 0x7b},   // VSTOP  = 494 ( = 123 * 4 + 2)
  {0x03, 0x0a},   // VREF (VSTART_LOW = 2, VSTOP_LOW = 2)

  /* color matrix coefficient */
////#if 0
//  {0x4f, 0xb3},
//  {0x50, 0xb3},
//  {0x51, 0x00},
//  {0x52, 0x3d},
//  {0x53, 0xa7},
//  {0x54, 0xe4},
//  {0x58, 0x9e},
//#else - This is same as MIT - best - same as arduino
  {0x4f, 0x80},
  {0x50, 0x80},
  {0x51, 0x00},
  {0x52, 0x22},
  {0x53, 0x5e},
  {0x54, 0x80},
  {0x58, 0x9e}, //automatic contrast center
  //{0x58, 0xBC},
  //signs
  // 5 4 3 2 1 0
  // - - - - - + ok
  // + + + + + + pink
  // - + - + - +

//#endif


  //MY VERSION
//  {0x4f, 0x40},
//  {0x50, 0x34},
//  {0x51, 0x0C},
//  {0x52, 0x17},
//  {0x53, 0x29},
//  {0x54, 0x40},
//  {0x58, 0x1e},
//
 //{0x41, 0x0A},


//    {0x4f, 0x80},
//    {0x50, 0x80},
//    {0x51, 0x00},
//    {0x52, 0x22},
//    {0x53, 0x5e},
//    {0x54, 0x80},
//    {0x58, 0x9e},
//{0x4f, 0x80);
//{0x50, 0x80);
//{0x51, 0x00);
//{0x52, 0x22);
//{0x53, 0x5e);
//{0x54, 0x80);
//{0x58, 0x9e);

  //This type of GAIN gives alot of noice.
  /* 3a */
  //{0x13, 0x84}, // default turns on AWB
//  {0x14, 0x0a},   // AGC Ceiling = 2x /default 4x       - IF I ENABLE THIS NO IMAGE DATA AT ALL
//  {0x5F, 0x2f},   // AWB B Gain Range (empirically decided)
//                  // without this bright scene becomes yellow (purple). might be because of color matrix
//  {0x60, 0x98},   // AWB R Gain Range (empirically decided)
//  {0x61, 0x70},   // AWB G Gain Range (empirically decided)
 // {0x41, 0x38},   // edge enhancement, de-noise, AWG gain enabled - REMOVING THIS - NO MORE INVERTED COLOR - MUCH MORE STABLE
  {0x41, 0x18}, //

  //FROM MIT
//{0x6c, 0x0a}, //AWB control
//{0x6d, 0x55}, //AWB control
//{0x6e, 0x11}, //AWB control
//{0x6f, 0x9f}, //AWB control
//{0x6a, 0x40}, //GGAIN
//{0x01, 0x40}, // BLUE GAIN (AGC) - default 0x80 - max FF
//{0x02, 0x40}, // RED GAIN (AGC) - default 0x80 - max FF
////0x13 is important - [2] on/off AGC automatic gain - [1] on/off AWB automatic white balance
//{0x13, 0xe7}, //Banding filter - depends on exposure time - se 3.3. automatic exposure time (AEC)
// //0xef value - all is enabled except banding
////{0x15, 0x02); // VSYNC negative

///*Simple AWG*/ - fix green problem
  {0x13, 0xe7}, //AWB on (auto light mode)
  {0x6f, 0x9f}, // Simple AWB

  /*Light mode - office*/
//  {0x13, 0xe5}, //AWB off
//  {0x01, 0x84},
//  {0x02, 0x4c},

  /*Brightness*/ //Higher brigtness more foggy image
//  {0x55, 0x30}, // +2
//  {0x55, 0x18}, // +1
  {0x55, 0x00}, // 0
//  {0x55, 0x98}, //-1
//  {0x55, 0xb0}, // -2

  /*Contrast*/
//  {0x56, 0x60}, //+2
//  {0x56, 0x50}, //+1
  {0x56, 0x40}, //0
//  {0x56, 0x38}, //-1
//  {0x56, 0x30}, //-2

  /*Normal color settings - no special effects*/ //made it worse
//  {0x3a, 0x0c},
//  {0x67, 0xc0},
//  {0x68, 0x80},

  /* gamma curve */
//#if 1 - works good - BEST
  {0x7b, 16},
  {0x7c, 30},
  {0x7d, 53},
  {0x7e, 90},
  {0x7f, 105},
  {0x80, 118},
  {0x81, 130},
  {0x82, 140},
  {0x83, 150},
  {0x84, 160},
  {0x85, 180},
  {0x86, 195},
  {0x87, 215},
  {0x88, 230},
  {0x89, 244},
  {0x7a, 16},

//  //almost linear - slight curve - Good colors, but dark
//  {0x7b, 13},
//  {0x7c, 28},
//  {0x7d, 43},
//  {0x7e, 58},
//  {0x7f, 74},
//  {0x80, 90},
//  {0x81, 105},
//  {0x82, 119},
//  {0x83, 136},
//  {0x84, 153},
//  {0x85, 169},
//  {0x86, 186},
//  {0x87, 203},
//  {0x88, 220},
//  {0x89, 238},
//  {0x7a, 24},

  //https://chromium.googlesource.com/chromiumos/third_party/kernel-next/+/0.12.433.B/drivers/media/video/ov7670.c
  /* Gamma curve values */ // bad white
//  	{ 0x7a, 0x20 },		{ 0x7b, 0x10 },
//  	{ 0x7c, 0x1e },		{ 0x7d, 0x35 },
//  	{ 0x7e, 0x5a },		{ 0x7f, 0x69 },
//  	{ 0x80, 0x76 },		{ 0x81, 0x80 },
//  	{ 0x82, 0x88 },		{ 0x83, 0x8f },
//  	{ 0x84, 0x96 },		{ 0x85, 0xa3 },
//  	{ 0x86, 0xaf },		{ 0x87, 0xc4 },
//  	{ 0x88, 0xd7 },		{ 0x89, 0xe8 },

//#else
  /* gamma = 1 */ // THIS IS VERY GREEN
//  {0x7b, 4},
//  {0x7c, 8},
//  {0x7d, 16},
//  {0x7e, 32},
//  {0x7f, 40},
//  {0x80, 48},
//  {0x81, 56},
//  {0x82, 64},
//  {0x83, 72},
//  {0x84, 80},
//  {0x85, 96},
//  {0x86, 112},
//  {0x87, 144},
//  {0x88, 176},
//  {0x89, 208},
//  {0x7a, 64},

  //Better white, but rest is a bit faded
//    {0x7b, 55},
//    {0x7c, 90},
//    {0x7d, 120},
//    {0x7e, 145},
//    {0x7f, 170},
//    {0x80, 190},
//    {0x81, 200},
//    {0x82, 210},
//    {0x83, 220},
//    {0x84, 230},
//    {0x85, 235},
//    {0x86, 240},
//    {0x87, 245},
//    {0x88, 248},
//    {0x89, 251},
//    {0x7a, 7},

	//(x-1)^2 - Good colors, but white is bad - very dark
//    {0x7b, 2},
//    {0x7c, 4},
//    {0x7d, 9},
//    {0x7e, 16},
//    {0x7f, 25},
//    {0x80, 36},
//    {0x81, 49},
//    {0x82, 64},
//    {0x83, 81},
//    {0x84, 100},
//    {0x85, 121},
//    {0x86, 144},
//    {0x87, 169},
//    {0x88, 196},
//    {0x89, 225},
//    {0x7a, 41},
//#endif

  //MY VERSION - MIT
//	{0x7a, 0x20},
//	{0x7b, 0x1c},
//	{0x7c, 0x28},
//	{0x7d, 0x3c},
//	{0x7e, 0x55},
//	{0x7f, 0x68},
//	{0x80, 0x76},
//	{0x81, 0x80},
//	{0x82, 0x88},
//	{0x83, 0x8f},
//	{0x84, 0x96},
//	{0x85, 0xa3},
//	{0x86, 0xaf},
//	{0x87, 0xc4},
//	{0x88, 0xd7},
//	{0x89, 0xe8},

//	{0x7a, 0x20);
//	{0x7b, 0x1c);
//	{0x7c, 0x28);
//	{0x7d, 0x3c);
//	{0x7e, 0x55);
//	{0x7f, 0x68);
//	{0x80, 0x76);
//	{0x81, 0x80);
//	{0x82, 0x88);
//	{0x83, 0x8f);
//	{0x84, 0x96);
//	{0x85, 0xa3);
//	{0x86, 0xaf);
//	{0x87, 0xc4);
//	{0x88, 0xd7);
//	{0x89, 0xe8);

/*Works, but not much difference*/
//	{ 0x0e, 0x61 },	//common control 5 - makes image darker
//	{ 0x0f, 0x4b }, //common control 6
//	{ 0x16, 0x02 },		//NOT Read or Write?
//	{ 0x1e, 0x07 }, //mirror
//	{ 0x21, 0x02 },		//reserved
//	{ 0x22, 0x91 },
//	{ 0x29, 0x07 },		//reserved
//	{ 0x33, 0x0b }, //Array Current Control
//	{ 0x35, 0x0b },		//reserved
//	{ 0x37, 0x1d }, //adc
//	{ 0x38, 0x71 },	//adc
//	{ 0x39, 0x2a }, //adc
//	//{ 0x3c, 0x78 },	//vsync
//	{ 0x4d, 0x40 },//dummy row
//	{ 0x4e, 0x20 },		//reserved

//{ 0x69, 0x55 }, //1.25 gain on all channels
  //{ 0x69, 0x01 }, 1.25 on blue
  //{ 0x69, 0x56 }, //1.25 on all except 1.5 on blue - messes up color bar
	//{ 0x6b, 0x4a },		//input clk x4
	//{ 0x74, 0x10 }, //digital gain controlled set to bypass??
	//{ 0x74, 0x03 }, //works, but litte differnce - set to x4
//	{ 0x8d, 0x4f },		((reserved
//	{ 0x8e, 0 },
//	{ 0x8f, 0 },
//	{ 0x90, 0 },
//	{ 0x91, 0 },
//	{ 0x96, 0 },
//	{ 0x9a, 0 },
	//{ 0xb0, 0x84 },
	//{ 0xb1, 0x0c },		//Enable ABLC automatic black level calibration
	//just enabling it

  //much better black level in color bar with 0xb1 and 0xb3
{ 0xb1, 0x04 },
//{ 0xb2, 0x0e },
{ 0xb3, 0x82 },		//Lower Limit of Black Level + 0x80
	//{ 0xb3, 0x8F },
	//{ 0xb8, 0x0a },



//THESE MESSES UP COLOR BAR

//	//CHECKOUT SHAPRNESS
//	//{0x41, 0x08},
//	{0x41, 0x38}, //enable AWB, de noise (0x18) and edge enhancement (YUV)
//	{0x3f, 0}, //Edge Enhancement Adjustment - factor
//	{0x75, 0x05}, //Edge enhancement lower limit
//	{0x76, 0xe1}, //enable white and black pixel correction - lower limit edge = 1
//	//{0x4c, 0}, //De-noise Threshold - updated in automatic mode
//	{0x77, 0x01}, //offset of the de-noise strength
//	{0x3d, 0xc3}, // gamma enable, UV auto, 11: V Y U Y
//	{0x4b, 0x09}, // UV average enable
//	{0xc9, 0x60}, // UV maks min
//	//{0x41, 0x38},
//	//{0x56, 0x40}, //contrast - 40 = no adjustment

//	/*Automatic White Balance Control*/ //makes it better but my reg check function don't work with these
//	{0x43, 0x0a},
//	{0x44, 0xf0},
//	{0x45, 0x34},
//	{0x46, 0x58},
//	{0x47, 0x28},
//	{0x48, 0x3a},
//
//	{0x59, 0x88},
//	{0x5a, 0x88},
//	{0x5b, 0x44},
//	{0x5c, 0x67},
//	{0x5d, 0x49},
//	{0x5e, 0x0e},
//
//	/*Lens correction*/
//	{0x64, 0x04},
//	{0x65, 0x20},
//	{0x66, 0x05},
//	{0x94, 0x04},
//	{0x95, 0x08},
//
//	{0x6c, 0x0a}, //AWB control
//	{0x6d, 0x55}, //AWB control
//	{0x6e, 0x11}, //AWB control
//	{0x6f, 0x9f}, //AWB control
//	{0x6a, 0x40}, //GGAIN
//	{0x01, 0x40}, // BLUE GAIN (AGC) - default 0x80 - max FF
//	{0x02, 0x40}, // RED GAIN (AGC) - default 0x80 - max FF
//	{0x13, 0xe7}, //Banding filter - depends on exposure time - se 3.3. automatic exposure time (AEC)
//	//{0x15, 0x02}, //VSYNC negative







  //FIX GAIN
  //{0x69,0x06}, //Bx1.5, Rx1.25, Gx1
  //{0x69,0x07},	 //Bx1.75, Rx1.25, Gx1
  //{0x69,0x0B},	 //Bx1.75, Rx1.5, Gx1


  /* fps */
//  {0x6B, 0x4a}, //PLL  x4
    {0x11, 0x00}, // pre-scalar = 1/1   (night mode: 0x11, 0x03)
//  {0x11, 0x03},
//  {0x3b, 0x0a},
  /* others */
  //{0x1E, 0x31}, //mirror flip
  //{0x42, 0x08}, // test bar

  {REG_BATT, REG_BATT},
};

#endif /* INC_OV7670_REGISTERS_SIMEN_V2_H_ */
